import java.util.ArrayList;

public class WarGame {

	//Declare variables
	private ArrayList<Card> userCards;
	private ArrayList<Card> compCards;
	private Deck cardDeck;
	private Card userCard, compCard;
	/**
	 * Default Constructor
	 */
	public WarGame()
	{
		userCards = new ArrayList<Card>();
		compCards = new ArrayList<Card>();
		cardDeck = new Deck();
		
		splitDeck();
	}
	
	
	//Divide deck between user and computer
	/**
	 * SplitDeck method splits the card deck in half between two players
	 */
	public void splitDeck()
	{
		
		while(cardDeck.cardsLeft() != 0)
		{
			userCards.add(cardDeck.dealCard());
			compCards.add(cardDeck.dealCard());
		}
	}
	
	//pop first card in each stack as flip of card
	/**
	 * flipCard method removes a card from each player's list and assigns to card object
	 */
	public void flipCard()
	{
		if (!userCards.isEmpty() && !compCards.isEmpty())
		{
			userCard = userCards.remove((userCards.size())-1);
			compCard = compCards.remove((compCards.size())-1);
		}
		else if (userCards.isEmpty() && !compCards.isEmpty())
		{
			//put in winner method saying computer wins
		}
		else if(!userCards.isEmpty() && compCards.isEmpty())
		{
			//put in winner method saying user wins
		}
		else if(userCards.isEmpty() && compCards.isEmpty())
		{
			throw new ListIndexOutOfBoundsException ("the arraylist is empty");
		}
		
	}
	//Compare method
	public void compareCards()
	{
		if (userCard.equals(compCard))
		{
			war();
		}
		else if (userCard.greaterThan(compCard)==true)
		{
			userCards.add(0,userCard);
			userCards.add(0,compCard);
		}
		else 
		{
			compCards.add(0,compCard);
			compCards.add(0, userCard);
		}
	}
	//War method
	public void war()
	{
		
	}
	//checkWinner method
	
	
	
	public Object getUserCard()
	{
		return userCard;
	}
	public Object getCompCard()
	{
		return compCard;
	}
	
	
	/**
	 * 
	 * @return Int number of cards left in user's deck
	 */
	public int getUserNumCards()
	{
		return userCards.size();
	}
	/**
	 * 
	 * @return Int number of cards left in computer's deck
	 */
	public int getCompNumCards()
	{
		return compCards.size();
	}

	
	
	
	
	public static void main(String [] args)
	{
		WarGame war = new WarGame();
		
		war.splitDeck();
		//System.out.println(war.getCompNumCards());
		//System.out.println(war.getUserNumCards());
		int count = 0;
		for (int i = 0; i< 26; i++)
		{
			war.flipCard();
			System.out.println(war.getUserCard());
			count += 1;
			System.out.println(war.getCompCard());
			count+= 1;
		}
		System.out.println(count);
	}
}
